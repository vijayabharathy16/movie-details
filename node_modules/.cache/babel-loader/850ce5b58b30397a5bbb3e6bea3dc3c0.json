{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport API from \"../API\";\nexport const useMovieFetch = movieId => {\n  _s();\n\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const movie = await API.fetchMovie(movieId);\n        const credits = await API.fetchCredits(movieId);\n        const directors = credits.crew.filter(member => member.job === \"Director\");\n        setState({ ...movie,\n          actors: credits.cast,\n          directors: directors\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n\n    fetchMovie();\n  }, [movieId]);\n  return {\n    state,\n    loading,\n    error\n  };\n};\n\n_s(useMovieFetch, \"H9fMDtHieNoIS0cJiyLVriXyWm0=\");","map":{"version":3,"sources":["C:/Projects/movie-details/src/Hooks/useMovieFetch.js"],"names":["useState","useEffect","API","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchMovie","movie","credits","fetchCredits","directors","crew","filter","member","job","actors","cast"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,UAAU,GAAG,YAAY;AAC7B,UAAI;AACFH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,cAAME,KAAK,GAAG,MAAMV,GAAG,CAACS,UAAJ,CAAeP,OAAf,CAApB;AACA,cAAMS,OAAO,GAAG,MAAMX,GAAG,CAACY,YAAJ,CAAiBV,OAAjB,CAAtB;AAEA,cAAMW,SAAS,GAAGF,OAAO,CAACG,IAAR,CAAaC,MAAb,CACfC,MAAD,IAAYA,MAAM,CAACC,GAAP,KAAe,UADX,CAAlB;AAIAb,QAAAA,QAAQ,CAAC,EACP,GAAGM,KADI;AAEPQ,UAAAA,MAAM,EAAEP,OAAO,CAACQ,IAFT;AAGPN,UAAAA,SAAS,EAAEA;AAHJ,SAAD,CAAR;AAMAP,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAlBD,CAkBE,OAAOC,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,KAtBD;;AAwBAC,IAAAA,UAAU;AACX,GA1BQ,EA0BN,CAACP,OAAD,CA1BM,CAAT;AA4BA,SAAO;AAAEC,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAP;AACD,CAlCM;;GAAMN,a","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport API from \"../API\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        const movie = await API.fetchMovie(movieId);\r\n        const credits = await API.fetchCredits(movieId);\r\n\r\n        const directors = credits.crew.filter(\r\n          (member) => member.job === \"Director\"\r\n        );\r\n\r\n        setState({\r\n          ...movie,\r\n          actors: credits.cast,\r\n          directors: directors,\r\n        });\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    fetchMovie();\r\n  }, [movieId]);\r\n\r\n  return { state, loading, error };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}