{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\movie-details\\\\src\\\\components\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\"; //Config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\"; //Components\n\nimport BreadCrumb from \"./BreadCrumb\";\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner\";\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Actor from \"./Actor\"; //Hook\n\nimport { useMovieFetch } from \"../Hooks/useMovieFetch\"; //Image\n\nimport NoImage from \"../images/no_image.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const {\n    state: movie,\n    loading,\n    error\n  } = useMovieFetch(movieId);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong!..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      movieTitle: movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfoBar, {\n      time: movie.runtime,\n      budget: movie.budget,\n      revenue: movie.revenue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      header: \"Actors\",\n      children: movie.actors.map(actor => /*#__PURE__*/_jsxDEV(Actor, {\n        name: actor.name,\n        actorId: actor.id,\n        chracter: actor.chracter,\n        imageUrl: actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage\n      }, actor.credit_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movie, \"MFvN9GJ3GVLfd55hOP/zB0RDH6Y=\", false, function () {\n  return [useParams, useMovieFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Projects/movie-details/src/components/Movie.js"],"names":["React","useParams","Link","IMAGE_BASE_URL","POSTER_SIZE","BreadCrumb","Grid","Spinner","MovieInfo","MovieInfoBar","Actor","useMovieFetch","NoImage","Movie","movieId","state","movie","loading","error","original_title","runtime","budget","revenue","actors","map","actor","name","id","chracter","profile_path","credit_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAcb,SAAS,EAA7B;AACA,QAAM;AAAEc,IAAAA,KAAK,EAAEC,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAmCP,aAAa,CAACG,OAAD,CAAtD;AAEA,MAAIG,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEF,KAAK,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AACE,MAAA,IAAI,EAAEA,KAAK,CAACI,OADd;AAEE,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAFhB;AAGE,MAAA,OAAO,EAAEL,KAAK,CAACM;AAHjB;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE,QAAC,IAAD;AAAM,MAAA,MAAM,EAAC,QAAb;AAAA,gBACGN,KAAK,CAACO,MAAN,CAAaC,GAAb,CAAkBC,KAAD,iBAChB,QAAC,KAAD;AAEE,QAAA,IAAI,EAAEA,KAAK,CAACC,IAFd;AAGE,QAAA,OAAO,EAAED,KAAK,CAACE,EAHjB;AAIE,QAAA,QAAQ,EAAEF,KAAK,CAACG,QAJlB;AAKE,QAAA,QAAQ,EACNH,KAAK,CAACI,YAAN,GACK,GAAE1B,cAAe,GAAEC,WAAY,GAAEqB,KAAK,CAACI,YAAa,EADzD,GAEIjB;AARR,SACOa,KAAK,CAACK,SADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AA0BD,CAjCD;;GAAMjB,K;UACgBZ,S,EACqBU,a;;;KAFrCE,K;AAmCN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n//Components\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\n//Hook\r\nimport { useMovieFetch } from \"../Hooks/useMovieFetch\";\r\n//Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div>Something went wrong!..</div>;\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie.actors.map((actor) => (\r\n          <Actor\r\n            key={actor.credit_id}\r\n            name={actor.name}\r\n            actorId={actor.id}\r\n            chracter={actor.chracter}\r\n            imageUrl={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n"]},"metadata":{},"sourceType":"module"}